#install.packages("fivethirtyeight")
library(fivethirtyeight)library(tidyverse)
# URL to the data that you've used.
url <-'https://jmontgomery.github.io/PDS/Datasets/president_primary_polls_feb2020.csv'
polls <-read_csv(url)
Endorsements <- endorsements_2020
# from the fiverthirtyeight package
install.packages("fivethirtyeight")
library(fivethirtyeight)
library(tidyverse)
# URL to the data that you've used.
url <-'https://jmontgomery.github.io/PDS/Datasets/president_primary_polls_feb2020.csv'
polls <-read_csv(url)
Endorsements <- endorsements_2020
# from the fiverthirtyeight package
Endorsements %>%
rename(candidate_name==endorse)
#Change the Endorsements variable name endorse to candidate_name.
Endorsements %>%
rename(endorse==candidate_name)
Endorsements %>%
rename(endorse==candidate_name)
View(Endorsements)
Endorsements %>%
rename(endorsee==candidate_name)
Endorsements %>%
rename(candidate_name==endorsee)
library(tidyverse)
Endorsements %>%
rename(candidate_name==endorsee)
#Change the Endorsements variable name endorse to candidate_name.
rename(Endorsements, candidate_name==endorsee)
#Change the Endorsements variable name endorse to candidate_name.
rename(Endorsements, candidate_name=endorsee)
#Change the \texttt{Endorsements} dataframe into a \texttt{tibble} object.
Endorsements <- as.tibble(Endorsements)
Endorsements <- as_tibble(Endorsements)
dat %>%
filter(candidate_name==c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
dat %>%
filter(Endorsements, candidate_name==c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
#Filter the \texttt{poll} variable to only include the following 6 candidates: Amy Klobuchar, Bernard Sanders,Elizabeth Warren, Joseph R. Biden Jr., Michael Bloomberg, Pete Buttigieg
filter(Endorsements, candidate_name==c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
Endorsements %>%
filter(candidate_name==c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
View(Endorsements)
Endorsements %>% rename(Endorsements, candidate_name=endorsee)
Endorsements <-Endorsements %>%
rename(candidate_name=endorsee)
#Change the \texttt{Endorsements} dataframe into a \texttt{tibble} object.
Endorsements <- as_tibble(Endorsements)
#Filter the \texttt{poll} variable to only include the following 6 candidates: Amy Klobuchar, Bernard Sanders,Elizabeth Warren, Joseph R. Biden Jr., Michael Bloomberg, Pete Buttigieg
polls <- polls %>%
filter(candidate_name==c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
polls <- polls %>%
filter(candidate_name %in% c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
#subset the dataset to the following five variables: \texttt{candidate\_name, sample\_size, start\_date, party, pct}
library(dplyr)
View(polls)
table(polls$candidate_name)
library(dplyr)
polls <- polls %>%
select(candidate_name, sample_size, start_date, party, pct)
glimpse(polls)
#Compare the candidate names in the two datasets and find instances where the a candidates name is spelled differently i.e. Bernard vs. Bernie.
table(Endorsements$candidate_name)
Endorsements <- Endorsements %>%
mutate(candidate_name = ifelse(candidate_name == "Bernie Sanders", "Bernard Sanders", candidate_name))
#Compare the candidate names in the two datasets and find instances where the a candidates name is spelled differently i.e. Bernard vs. Bernie.
table(Endorsements$candidate_name)
Endorsements <- Endorsements %>%
mutate(candidate_name = ifelse(candidate_name == "Joe Biden", "Joseph R. Biden Jr.", candidate_name))
polls_endorse <- left_join(polls, Endorsements, by="candidate_name")
View(polls_endorse)
table(polls_endorse$candidate_name)
polls_endorse <- right_join(polls, Endorsements, by="candidate_name")
table(polls_endorse$candidate_name)
polls_endorse <- left_join(polls, Endorsements, by="candidate_name")
table(polls_endorse$candidate_name)
#combine the two datasets by candidate name using \texttt{dplyr} (there will only be five candidates after joining - no Bloomberg)
#use left join
polls_endorse <- inner_join(polls, Endorsements, by="candidate_name")
table(polls_endorse$candidate_name)
View(polls_endorse)
polls_endorse <- polls_endorse %>%
group_by(candidate_name) %>%
summarise(n_endorse = sum(endorser))
polls_endorse <- polls_endorse %>%
group_by(candidate_name) %>%
summarise(n_endorse = count(candidate_name))
polls_endorse <- polls_endorse %>%
group_by(candidate_name) %>%
mutate(n_endorse = count(candidate_name))
polls_endorse <- polls_endorse %>%
group_by(candidate_name)
count(candidate_name)
polls_endorse <- polls_endorse %>%
count(candidate_name)
n_endorse <- polls_endorse %>%
count(candidate_name)
#Plot the number of endorsement each of the 5 candidates have using \texttt{ggplot()}.
library(ggplot2)
View(n_endorse)
ggplot(n_endorse)+
geom_bar(aes(x=candidate_name, y=n))
p <- n_endorse %>%
ggplot()+
geom_bar(aes(x=candidate_name, y=n))
p
p <- n_endorse %>%
ggplot()+
geom_bar(aes(x=candidate_name, y=n), stat="identity")
p
n_endorse <- polls_endorse %>%
count(candidate_name)
#install.packages("fivethirtyeight")
library(fivethirtyeight)
library(tidyverse)
# URL to the data that you've used.
url <-'https://jmontgomery.github.io/PDS/Datasets/president_primary_polls_feb2020.csv'
#create new objects for polls and endorsements
polls <-read_csv(url)
Endorsements <- endorsements_2020
# from the fiverthirtyeight package
#Change the Endorsements variable name endorse to candidate_name.
Endorsements <-Endorsements %>%
rename(candidate_name=endorsee)
#Change the \texttt{Endorsements} dataframe into a \texttt{tibble} object.
Endorsements <- as_tibble(Endorsements)
#Filter the \texttt{poll} variable to only include the following 6 candidates: Amy Klobuchar, Bernard Sanders,Elizabeth Warren, Joseph R. Biden Jr., Michael Bloomberg, Pete Buttigieg
polls <- polls %>%
filter(candidate_name %in% c("Amy Klobuchar", "Bernard Sanders", "Elizabeth Warren", "Joseph R. Biden Jr.", "Michael Bloomberg", "Pete Buttigieg"))
#check it worked
table(polls$candidate_name)
#subset the dataset to the following five variables: \texttt{candidate\_name, sample\_size, start\_date, party, pct}
library(dplyr)
polls <- polls %>%
select(candidate_name, sample_size, start_date, party, pct)
#check it worked
glimpse(polls)
#Compare the candidate names in the two datasets and find instances where the a candidates name is spelled differently i.e. Bernard vs. Bernie.
table(Endorsements$candidate_name)
#change Bernie Sanders to Bernard Sanders
Endorsements <- Endorsements %>%
mutate(candidate_name = ifelse(candidate_name == "Bernie Sanders", "Bernard Sanders", candidate_name))
#change Joe Biden to Joseph R Biden Jr
Endorsements <- Endorsements %>%
mutate(candidate_name = ifelse(candidate_name == "Joe Biden", "Joseph R. Biden Jr.", candidate_name))
#check it worked
table(Endorsements$candidate_name)
#combine the two datasets by candidate name using \texttt{dplyr}
#use inner join since we are supposed to end up with only 5 candidates after joining and endorsements doesn't have bloomberg
polls_endorse <- inner_join(polls, Endorsements, by="candidate_name")
table(polls_endorse$candidate_name)
n_endorse <- polls_endorse %>%
count(candidate_name)
View(n_endorse)
library(ggplot2)
p <- n_endorse %>%
ggplot()+
geom_bar(aes(x=candidate_name, y=n), stat="identity")
p
library(ggplot2)
p <- n_endorse %>%
ggplot()+
geom_bar(aes(x=candidate_name, y=n), stat="identity")+
labs(x="Candidate", y="Number of Endorsements Received")
p
#Save your plot as an object \texttt{p}.
ggsave("p.png")
#Rerun the previous line as follows: \texttt{p + theme\_dark()}
p+theme_dark()
#Now, using the knowledge from the last step change the label of the X and Y axes to be more informative, add a title. Save the plot in your forked repository.
p+labs(title="Democratic Primary 2020 Candidate Endorsements")
#Now, using the knowledge from the last step change the label of the X and Y axes to be more informative, add a title. Save the plot in your forked repository.
#i already have x and y axes so just add title
p+labs(title="Democratic Primary 2020 Candidate Endorsements", sub="data from https://jmontgomery.github.io/PDS/Datasets/president_primary_polls_feb2020.csv")
#Now, using the knowledge from the last step change the label of the X and Y axes to be more informative, add a title. Save the plot in your forked repository.
#i already have x and y axes so just add title
p+labs(title="Democratic Primary 2020 Candidate Endorsements", caption="data from https://jmontgomery.github.io/PDS/Datasets/president_primary_polls_feb2020.csv")
#Save the plot in your forked repository.
ggsave("p.png")
